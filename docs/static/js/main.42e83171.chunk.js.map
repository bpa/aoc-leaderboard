{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["completionText","elapsed","seconds","minutes","map","n","toString","padStart","join","cmp","a","b","key","completion","App","useState","data","setData","day","setDay","members","Object","values","sort","diff","local_score","last_star_ts","year","dateInEST","Date","getTime","dayOfMonth","getDate","useEffect","start","Math","floor","fetch","then","res","json","m","stars","star","name","id","global_score","nameWidth","max","length","digits","log10","leaderboard","dayChanged","e","target","text","dayText","ones","tens","u","i","cls","push","className","items","href","onClick","dayLinks","padEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42e83171.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst oneDay = 60 * 60 * 24;\nconst tzOffset = 300 * 60 * 1000;\n\nfunction completionText(elapsed) {\n    if (!elapsed) {\n        return '--:--:--';\n    } else if (elapsed > oneDay) {\n        return '  >24h  ';\n    }\n    let seconds = elapsed % 60;\n    elapsed = (elapsed - seconds) / 60;\n    let minutes = elapsed % 60;\n    elapsed = (elapsed - minutes) / 60;\n    return [elapsed, minutes, seconds].map(n => n.toString().padStart(2, '0')).join(':');\n}\n\nfunction cmp(a, b, key) {\n    if (a.completion[key]) {\n        if (b.completion[key]) {\n            return a.completion[key] - b.completion[key];\n        }\n    } else if (b.completion[key]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction App() {\n    const [data, setData] = useState({});\n    const [day, setDay] = useState(0);\n    const members = Object.values(data['members'] || {}).sort((a, b) => {\n        let diff = 0;\n        if (day) {\n            diff = cmp(a, b, `${day}-2`) || cmp(a, b, `${day}-1`);\n        }\n        return diff || b.local_score - a.local_score || a.last_star_ts - b.last_star_ts;\n    });\n    const year = 2021;\n    const dateInEST = new Date(new Date().getTime() - tzOffset);\n    const dayOfMonth = dateInEST > new Date(`${year}-12-25T00:00:00-05:00`) ? 25 : dateInEST.getDate();\n    const leaderboard = 26428;\n\n    useEffect(() => {\n        const start = Math.floor((new Date(`${year}-12-01T00:00:00-05:00`)).getTime() / 1000);\n        fetch(`https://adventofcode.com/${year}/leaderboard/private/view/${leaderboard}.json`)\n        // fetch(`leaderboard.json`)\n            .then(res => res.json())\n            .then(res => Object.values(res['members'] || {}).map(m => {\n                let stars = {};\n                if (m['completion_day_level']) {\n                    for (const day in m['completion_day_level']) {\n                        const completion = m['completion_day_level'][day];\n                        for (const star in completion) {\n                            let elapsed = completion[star]['get_star_ts'] - start - (oneDay * (day - 1));\n                            stars[`${day}-${star}`] = elapsed;\n                        }\n                    }\n                }\n                return {\n                    name: m.name || `(anonymous user #${m.id})`,\n                    completion: stars,\n                    local_score: m.local_score,\n                    global_score: m.global_score,\n                    last_star_ts: m.last_star_ts,\n                    stars: m.stars,\n                }\n            }))\n            .then(members => {\n                return {\n                    nameWidth: 3 + Math.max(...members.map(m => m.name.length)),\n                    digits: Math.floor(Math.log10(Math.max(...members.map(m => m['local_score'])))),\n                    members: members,\n                }\n            })\n            .then(leaderboard => setData(leaderboard));\n    }, [year, leaderboard]);\n\n    const dayChanged = (e) => {\n        setDay(e.target.text);\n    };\n\n    const dayText = (day) => {\n        if (day < 10) {\n            return day;\n        }\n        let ones = day % 10;\n        let tens = (day - ones) / 10;\n        return (<>{tens}<br/>{ones}</>);\n    };\n\n    const dayLinks = () => {\n        let items = [];\n        for (let i = 1; i < 26; i++) {\n            if (i > dayOfMonth) {\n                items.push(<span>{dayText(i)}</span>)\n            } else {\n                items.push(<a href=\"#\" onClick={dayChanged} key={i}>{dayText(i)}</a>);\n            }\n        }\n        return items;\n    };\n\n    const stars = (u) => {\n        let stars = [];\n        for (let i = 1; i < 26; i++) {\n            let cls = i > dayOfMonth ? \"privboard-star-locked\" : \"privboard-star-unlocked\";\n            if (`${i}-1` in u.completion) { cls = \"privboard-star-firstonly\" }\n            if (`${i}-2` in u.completion) { cls = \"privboard-star-both\" }\n            stars.push(<span className={cls} key={i}>*</span>);\n        }\n        return stars;\n    };\n\n    const user = (u, i) => {\n        return (\n            <div className=\"privboard-row\">\n                <span className=\"privboard-position\">{`${i+1}`.padStart(2, ' ')})</span>\n                {` ${u.local_score} `.padStart(data.digits + 3, ' ')}\n                {stars(u)}\n                {'  '}\n                <span\n                    className=\"privboard-name\">{u.name.padEnd(data.nameWidth, ' ')}</span>\n                {day ? completionText(u.completion[`${day}-1`]) + '  ' + completionText(u.completion[`${day}-2`]) : null}\n            </div>);\n    };\n\n    const timeHeader = () => {\n        if (!day) {\n            return null;\n        }\n\n        return (<>\n                <span className=\"leaderboard-daydesc-first\">-Part 1-</span>\n                {'  '}\n                <span className=\"leaderboard-daydesc-both\">-Part 2-</span>\n            </>\n        );\n    };\n\n    return (\n        <article>\n            <p>\n                <span className=\"privboard-star-both\">Gold</span>\n                {' indicates the user got both stars for that day, '}\n                <span className=\"privboard-star-firstonly\">silver</span>\n                {' means just the first star, and '}\n                <span className=\"privboard-star-unlocked\">gray</span>\n                {' means none. '}\n            </p>\n            <div className=\"privboard-row\">\n                {''.padStart(data.digits + 6, ' ')}\n                <span className=\"privboard-days\">{dayLinks()}</span>\n                {'  '}\n                <a href=\"#\" onClick={() => setDay(0)}>Overall</a>\n                {''.padEnd(data.nameWidth - 7, ' ')}\n\n                {timeHeader()}\n            </div>\n            <div className=\"privboard-row\">\n                    <span className=\"privboard-days\">\n                        {members.map(user)}\n                    </span>\n            </div>\n        </article>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}